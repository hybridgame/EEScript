//  Class   Type 0      Type 1
//  Ranger              Hide
//  Cleric              Turn
//  PALADIN             Turn
//  Bard                BattleSong
//  Shaman  FindTraps   ShamanDance
//  Monk    FindTraps   Hide
//  Thief   FindTraps   Hide

///////////////////////////////////////////////////////////////////////////////
// 스크립트 시작시 상태 출력
///////////////////////////////////////////////////////////////////////////////

IF
	OnCreation()
	Global("EC#AI","LOCALS",0)
THEN
	RESPONSE #100
		SetGlobalTimer("EC#HIDE","LOCALS",1)
		DisplayStringHead(Myself,@10)   // 인공지능 켬
		Continue()
END

IF
	OnCreation()
	Global("EC#AI","LOCALS",1)
THEN
	RESPONSE #100
		SetGlobalTimer("EC#HIDE","LOCALS",1)
		DisplayStringHead(Myself,@11)   // 인공지능 끔
		Continue()
END

///////////////////////////////////////////////////////////////////////////////
// 인공지능이 꺼져있을 때는 인공지능을 키고 끄는 핫키 스크립트만 작동한다.
///////////////////////////////////////////////////////////////////////////////

IF
	HotKey(V)
	Global("EC#AI","LOCALS",0)
THEN
	RESPONSE #100
		DisplayStringHead(Myself,@11)   // 인공지능 끔
		SetGlobal("EC#AI","LOCALS",1)
		Continue()
END

IF
	HotKey(V)
	Global("EC#AI","LOCALS",1)
THEN
	RESPONSE #100
		DisplayStringHead(Myself,@10)   // 인공지능 켬
		SetGlobal("EC#AI","LOCALS",0)
		Continue()
END

IF
	Global("EC#AI","LOCALS",1)
THEN
	RESPONSE #100
END

///////////////////////////////////////////////////////////////////////////////
// 핫키
///////////////////////////////////////////////////////////////////////////////

IF
	HotKey(B)
	Global("EC#TYPE","LOCALS",1)
    !Class(Myself,THIEF_ALL)
    !Class(Myself,MONK)
    !Class(Myself,SHAMAN)
THEN
	RESPONSE #100
        DisplayStringHead(Myself,@30)   // 비 전투시 행동 없음
		SetGlobal("EC#TYPE","LOCALS",0)
		Continue()
END

IF
	HotKey(B)
	Global("EC#TYPE","LOCALS",1)
    OR(3)
        Class(Myself,THIEF_ALL)
        Class(Myself,MONK)
        Class(Myself,SHAMAN)
THEN
	RESPONSE #100
        DisplayStringHead(Myself,@31)   // 비 전투시 함정 찾기
		SetGlobal("EC#TYPE","LOCALS",0)
		Continue()
END

IF
	HotKey(B)
	Global("EC#TYPE","LOCALS",0)
    OR(3)
        Class(Myself,THIEF_ALL)
        Class(Myself,MONK)
        Class(Myself,RANGER_ALL)
THEN
	RESPONSE #100
        DisplayStringHead(Myself,@32)   // 비 전투시 그림자 숨기
		SetGlobal("EC#TYPE","LOCALS",1)
		Continue()
END

IF
	HotKey(B)
	Global("EC#TYPE","LOCALS",0)
    OR(2)
        Class(Myself,PALADIN_ALL)
        Class(Myself,CLERIC_ALL)
THEN
	RESPONSE #100
        DisplayStringHead(Myself,@33)   // 항상 턴 언데드
		SetGlobal("EC#TYPE","LOCALS",1)
		Continue()
END

IF
	HotKey(B)
	Global("EC#TYPE","LOCALS",0)
    Class(Myself,BARD_ALL)
THEN
	RESPONSE #100
        DisplayStringHead(Myself,@34)   // 항상 바드 송
		SetGlobal("EC#TYPE","LOCALS",1)
		Continue()
END

IF
	HotKey(B)
	Global("EC#TYPE","LOCALS",0)
    Class(Myself,SHAMAN)
THEN
	RESPONSE #100
        DisplayStringHead(Myself,@35)   // 샤먼 댄스
		SetGlobal("EC#TYPE","LOCALS",1)
		Continue()
END

IF
	HotKey(N)
	Global("EC#RANGED","LOCALS",0)
THEN
	RESPONSE #100
        DisplayStringHead(Myself,@21)   // 원거리 무기 사용
		SetGlobal("EC#RANGED","LOCALS",1)
		Continue()
END

IF
	HotKey(N)
	Global("EC#RANGED","LOCALS",1)
THEN
	RESPONSE #100
        DisplayStringHead(Myself,@22)   // 거리에 맞춰 원거리, 근거리 무기 선택 사용
		SetGlobal("EC#RANGED","LOCALS",2)
		Continue()
END

IF
	HotKey(N)
	Global("EC#RANGED","LOCALS",2)
THEN
	RESPONSE #100
        DisplayStringHead(Myself,@20)   // 근거리 무기 사용
		SetGlobal("EC#RANGED","LOCALS",0)
		Continue()
END

///////////////////////////////////////////////////////////////////////////////
// 적과 마주치면 그전에 하던 모든 행동을 멈추고 파티에 알린다.
///////////////////////////////////////////////////////////////////////////////

IF
    See(NearestEnemyOf(Myself))
    Global("EC#COMBAT","LOCALS",0)
    Global("EC#RANGED","LOCALS",0)
THEN
	RESPONSE #100
		SetGlobal("EC#COMBAT","LOCALS",1)
        EquipMostDamagingMelee()
		ClearActions(Myself)
		Continue()
END

IF
    See(NearestEnemyOf(Myself))
    Global("EC#COMBAT","LOCALS",0)
    Global("EC#RANGED","LOCALS",1)
THEN
	RESPONSE #100
		SetGlobal("EC#COMBAT","LOCALS",1)
        EquipRanged()
		ClearActions(Myself)
		Continue()
END

IF
    See(NearestEnemyOf(Myself))
    Global("EC#COMBAT","LOCALS",0)
THEN
	RESPONSE #100
		SetGlobal("EC#COMBAT","LOCALS",1)
		ClearActions(Myself)
		Continue()
END

IF
    CombatCounter(0)
    !See(NearestEnemyOf(Myself))
    Global("EC#COMBAT","LOCALS",1)
THEN
    RESPONSE #100
		SetGlobal("EC#COMBAT","LOCALS",0)
        SetGlobal("EC#MOVE","LOCALS",0)
		Continue()
END

IF
	!GlobalTimerNotExpired("EC#SHOUT","LOCALS")
	See(NearestEnemyOf(Myself))
THEN
	RESPONSE #100
		GlobalShout(203)
		SetGlobalTimer("EC#SHOUT","LOCALS",TWO_ROUNDS)
		Continue()
END

///////////////////////////////////////////////////////////////////////////////
// 전투중인데 적이 보이지 않으면 적을 보고있는 파티원에게 이동한다.
///////////////////////////////////////////////////////////////////////////////

IF
	Heard([GOODCUTOFF],203)
	Global("EC#MOVE","LOCALS",0)
	ActionListEmpty()
	!CombatCounter(0)
	!See(NearestEnemyOf(Myself))
THEN
	RESPONSE #500
		SetGlobal("EC#COMBAT","LOCALS",0)
		SetGlobal("EC#MOVE","LOCALS",1)
		MoveToObject(LastHeardBy(Myself))
END

///////////////////////////////////////////////////////////////////////////////
// 전투 여부에 상관없이 항상 하는 행동
///////////////////////////////////////////////////////////////////////////////

// 클레릭, 팔라딘 턴 언데드
IF
	OR(2)
		Class(Myself,CLERIC_ALL)
		Class(Myself,PALADIN_ALL)
	ActionListEmpty()
	Global("EC#TYPE","LOCALS",1)
	!ButtonDisabled(BUTTON_TURNUNDEAD)
	!ModalState(TURNUNDEAD)
    CheckStatGT(Myself,5,TURNUNDEADLEVEL)
THEN
	RESPONSE #100
		Turn()
END

// 바드 바드송
IF
	Class(Myself,BARD_ALL)
	ActionListEmpty()
	Global("EC#TYPE","LOCALS",1)
	!ButtonDisabled(BUTTON_BATTLESONG)
	!ModalState(BATTLESONG)
THEN
	RESPONSE #100
		BattleSong()
END

// 샤먼 댄스
IF
	Class(Myself,SHAMAN)
	ActionListEmpty()
	Global("EC#TYPE","LOCALS",1)
	!ButtonDisabled(BUTTON_BATTLESONG)
	!ModalState(SHAMANDANCE)
THEN
	RESPONSE #100
		BattleSong()
END

///////////////////////////////////////////////////////////////////////////////
// 주문 시전을 하는 적부터 공격
///////////////////////////////////////////////////////////////////////////////

IF
	ActionListEmpty()
    !Global("EC#RANGED","LOCALS",2)
	CheckStatLT(Myself,1,SANCTUARY)
	!StateCheck(Myself,STATE_INVISIBLE)
	!ModalState(SHAMANDANCE)
	!ModalState(BATTLESONG)
	!ModalState(TURNUNDEAD)
	OR(21)
		See(SecondNearestEnemyOfType([0.0.0.BARD_ALL]))
		See(SecondNearestEnemyOfType([0.0.0.MAGE_ALL]))
        See(SecondNearestEnemyOfType([0.0.0.DRUID_ALL]))
		See(SecondNearestEnemyOfType([0.0.0.CLERIC_ALL]))
        See(ThirdNearestEnemyOfType([0.0.0.BARD_ALL]))
		See(ThirdNearestEnemyOfType([0.0.0.MAGE_ALL]))
        See(ThirdNearestEnemyOfType([0.0.0.DRUID_ALL]))
		See(ThirdNearestEnemyOfType([0.0.0.CLERIC_ALL]))
        See(FourthNearestEnemyOfType([0.0.0.BARD_ALL]))
		See(FourthNearestEnemyOfType([0.0.0.MAGE_ALL]))
        See(FourthNearestEnemyOfType([0.0.0.DRUID_ALL]))
		See(FourthNearestEnemyOfType([0.0.0.CLERIC_ALL]))
        See(FifthNearestEnemyOfType([0.0.0.BARD_ALL]))
		See(FifthNearestEnemyOfType([0.0.0.MAGE_ALL]))
        See(FifthNearestEnemyOfType([0.0.0.DRUID_ALL]))
		See(FifthNearestEnemyOfType([0.0.0.CLERIC_ALL]))
        See(SixthNearestEnemyOfType([0.0.0.BARD_ALL]))
		See(SixthNearestEnemyOfType([0.0.0.MAGE_ALL]))
        See(SixthNearestEnemyOfType([0.0.0.DRUID_ALL]))
		See(SixthNearestEnemyOfType([0.0.0.CLERIC_ALL]))
        See(NearestEnemyOf(Myself))
	!InParty(LastSeenBy(Myself))
THEN
	RESPONSE #100
		AttackReevaluate(LastSeenBy(Myself),30)
END

IF
	ActionListEmpty()
    Global("EC#RANGED","LOCALS",2)
	CheckStatLT(Myself,1,SANCTUARY)
	!StateCheck(Myself,STATE_INVISIBLE)
	!ModalState(SHAMANDANCE)
	!ModalState(BATTLESONG)
	!ModalState(TURNUNDEAD)
	OR(21)
		See(SecondNearestEnemyOfType([0.0.0.BARD_ALL]))
		See(SecondNearestEnemyOfType([0.0.0.MAGE_ALL]))
        See(SecondNearestEnemyOfType([0.0.0.DRUID_ALL]))
		See(SecondNearestEnemyOfType([0.0.0.CLERIC_ALL]))
        See(ThirdNearestEnemyOfType([0.0.0.BARD_ALL]))
		See(ThirdNearestEnemyOfType([0.0.0.MAGE_ALL]))
        See(ThirdNearestEnemyOfType([0.0.0.DRUID_ALL]))
		See(ThirdNearestEnemyOfType([0.0.0.CLERIC_ALL]))
        See(FourthNearestEnemyOfType([0.0.0.BARD_ALL]))
		See(FourthNearestEnemyOfType([0.0.0.MAGE_ALL]))
        See(FourthNearestEnemyOfType([0.0.0.DRUID_ALL]))
		See(FourthNearestEnemyOfType([0.0.0.CLERIC_ALL]))
        See(FifthNearestEnemyOfType([0.0.0.BARD_ALL]))
		See(FifthNearestEnemyOfType([0.0.0.MAGE_ALL]))
        See(FifthNearestEnemyOfType([0.0.0.DRUID_ALL]))
		See(FifthNearestEnemyOfType([0.0.0.CLERIC_ALL]))
        See(SixthNearestEnemyOfType([0.0.0.BARD_ALL]))
		See(SixthNearestEnemyOfType([0.0.0.MAGE_ALL]))
        See(SixthNearestEnemyOfType([0.0.0.DRUID_ALL]))
		See(SixthNearestEnemyOfType([0.0.0.CLERIC_ALL]))
        See(NearestEnemyOf(Myself))
	!InParty(LastSeenBy(Myself))
    Range(LastSeenBy(Myself),8)
THEN
	RESPONSE #100
        EquipMostDamagingMelee()
		AttackReevaluate(LastSeenBy(Myself),30)
END

IF
	ActionListEmpty()
    Global("EC#RANGED","LOCALS",2)
	CheckStatLT(Myself,1,SANCTUARY)
	!StateCheck(Myself,STATE_INVISIBLE)
	!ModalState(SHAMANDANCE)
	!ModalState(BATTLESONG)
	!ModalState(TURNUNDEAD)
	OR(21)
		See(SecondNearestEnemyOfType([0.0.0.BARD_ALL]))
		See(SecondNearestEnemyOfType([0.0.0.MAGE_ALL]))
        See(SecondNearestEnemyOfType([0.0.0.DRUID_ALL]))
		See(SecondNearestEnemyOfType([0.0.0.CLERIC_ALL]))
        See(ThirdNearestEnemyOfType([0.0.0.BARD_ALL]))
		See(ThirdNearestEnemyOfType([0.0.0.MAGE_ALL]))
        See(ThirdNearestEnemyOfType([0.0.0.DRUID_ALL]))
		See(ThirdNearestEnemyOfType([0.0.0.CLERIC_ALL]))
        See(FourthNearestEnemyOfType([0.0.0.BARD_ALL]))
		See(FourthNearestEnemyOfType([0.0.0.MAGE_ALL]))
        See(FourthNearestEnemyOfType([0.0.0.DRUID_ALL]))
		See(FourthNearestEnemyOfType([0.0.0.CLERIC_ALL]))
        See(FifthNearestEnemyOfType([0.0.0.BARD_ALL]))
		See(FifthNearestEnemyOfType([0.0.0.MAGE_ALL]))
        See(FifthNearestEnemyOfType([0.0.0.DRUID_ALL]))
		See(FifthNearestEnemyOfType([0.0.0.CLERIC_ALL]))
        See(SixthNearestEnemyOfType([0.0.0.BARD_ALL]))
		See(SixthNearestEnemyOfType([0.0.0.MAGE_ALL]))
        See(SixthNearestEnemyOfType([0.0.0.DRUID_ALL]))
		See(SixthNearestEnemyOfType([0.0.0.CLERIC_ALL]))
        See(NearestEnemyOf(Myself))
	!InParty(LastSeenBy(Myself))
    !Range(LastSeenBy(Myself),8)
THEN
	RESPONSE #100
        EquipRanged()
		AttackReevaluate(LastSeenBy(Myself),30)
END

///////////////////////////////////////////////////////////////////////////////
// 적이 보이지 않을 때 하는 행동
///////////////////////////////////////////////////////////////////////////////

// 레인저 그림자 숨기
IF
	Class(Myself,RANGER_ALL)
	ActionListEmpty()
    Global("EC#TYPE","LOCALS",1)
	!GlobalTimerNotExpired("EC#HIDE","LOCALS")
	!See(NearestEnemyOf(Myself))
	!ButtonDisabled(BUTTON_STEALTH)
	!ModalState(TURNUNDEAD)
	!ModalState(STEALTH)
THEN
	RESPONSE #100
		SetGlobalTimer("EC#HIDE","LOCALS",ONE_ROUND)
		Hide()
END

// 몽크, 씨프, 샤먼 함정 찾기
IF
	OR(3)
		Class(Myself,THIEF_ALL)
		Class(Myself,MONK)
        Class(Myself,SHAMAN)
	ActionListEmpty()
	Global("EC#TYPE","LOCALS",0)
    !See(NearestEnemyOf(Myself))
	!ButtonDisabled(BUTTON_THIEVING)
	!ModalState(TURNUNDEAD)
	!ModalState(DETECTTRAPS)
THEN
	RESPONSE #100
		FindTraps()
END

// 몽크, 씨프 그림자 숨기
IF
	OR(2)
		Class(Myself,THIEF_ALL)
		Class(Myself,MONK)
	ActionListEmpty()
	Global("EC#TYPE","LOCALS",1)
	!GlobalTimerNotExpired("EC#HIDE","LOCALS")
	!See(NearestEnemyOf(Myself))
	!ButtonDisabled(BUTTON_STEALTH)
	!ModalState(TURNUNDEAD)
	!ModalState(STEALTH)
THEN
	RESPONSE #100
		SetGlobalTimer("EC#HIDE","LOCALS",ONE_ROUND)
		Hide()
END